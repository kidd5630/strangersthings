{"version":3,"sources":["components/Aside.js","api/index.js","components/MakePosts.js","components/Allposts.js","components/Login.js","components/Myposts.js","components/SentMessages.js","components/ReceivedMessages.js","components/EditPost.js","components/IndividualPost.js","components/Profile.js","components/Register.js","components/Title.js","auth/index.js","index.js"],"names":["Aside","className","BASE_URL","fetchResgisterUser","url","username","password","a","fetch","method","headers","body","JSON","stringify","user","response","json","data","console","error","fetchLoginUser","createPost","userToken","title","description","price","location","deliver","postObj","post","deletePost","postId","results","posts","fetchMyData","sendMessage","message","editPost","MakePosts","allPosts","setAllPosts","useState","setTitle","setDescription","setPrice","setLocation","setDeliver","resetForm","e","preventDefault","success","result","onSubmit","type","placeholder","value","required","onChange","event","target","id","checked","document","querySelector","Allposts","myUsername","setSelectedPost","postID","searchTerm","setSearchTerm","filteredPosts","filter","text","author","toLowerCase","includes","postMatches","postsToDisplay","length","map","_id","onClick","to","Login","setMyPassword","myPassword","setMyUsername","setUserToken","history","useHistory","token","localStorage","setItem","push","alert","Myposts","postDeleted","useEffect","active","SentMessages","mySentMessageList","setMySentMessageList","sentMessageData","messages","fromUser","content","ReceivedMessages","myReceivedMessageList","setMyReceivedMessageList","receivedMessageData","EditPost","selectedPost","ToggleClass","log","IndividualPost","deleteItem","setMessage","myPostMessages","setMyPostMessages","isActiveEdit","setActiveEdit","isActiveMessage","setActiveMessage","emptyMessageForm","send","Profile","match","useRouteMatch","path","exact","Register","confirMmyPassword","setConfirmMyPassword","Title","style","textDecoration","fontSize","removeItem","App","parse","getItem","setPostDeleted","post_ID","fetchAllPosts","then","catch","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.cd8df8ae.chunk.js","sourcesContent":["import React from 'react';\n\nconst Aside = () => {\n    return (\n        <div className=\"aside\">\n            <h2>Please Login or Register to Create Posts or Send Messages </h2>\n        </div>)\n}\n\nexport default Aside; ","export const BASE_URL = 'https://strangers-things.herokuapp.com/api/2105-VPI-RM-WEB-PT/';\r\n\r\nexport async function fetchResgisterUser(url, username, password) {\r\n    try {\r\n        const response = await fetch(`${url}/users/register`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                user: {\r\n                    \"username\": username,\r\n                    \"password\": password\r\n                } \r\n            })\r\n        })\r\n        const data = await response.json();\r\n        return data\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nexport async function fetchLoginUser(url, username, password) {\r\n    try {\r\n        const response = await fetch(`${url}/users/login`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            user: {\r\n               \"username\": username,\r\n               \"password\": password\r\n           } \r\n        })\r\n    })\r\n        const data = await response.json();\r\n        return data\r\n    } catch (error) {\r\n        console.error(error);\r\n      }   \r\n}\r\n\r\nexport async function createPost( url, userToken, title, description, price, location, deliver) {\r\n    const postObj = {\r\n        \"title\": title,\r\n        \"description\": description,\r\n        \"price\": price,\r\n        \"willDeliver\": deliver\r\n    } \r\n    if(location) {\r\n        postObj[\"location\"] = location;\r\n    }\r\n    try {\r\n        const response = await fetch(`${url}/posts`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': \"Bearer \" + userToken\r\n            },\r\n            body: JSON.stringify({\r\n                post: postObj\r\n            })\r\n        })\r\n        const data = await response.json();\r\n        return data\r\n    } catch (error) {\r\n        console.error(error);\r\n    } \r\n}\r\n\r\nexport async function deletePost(url, postId, userToken) {\r\n    try {\r\n        const response = await fetch(`${url}/posts/${postId}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': \"Bearer \" + userToken\r\n            }\r\n        })\r\n        const data = await response.json();\r\n        return data\r\n    } catch (error) {\r\n        console.error(error);\r\n    } \r\n}\r\n\r\nexport async function fetchAllPosts(){\r\n    try{\r\n        const response = await fetch(`${BASE_URL}/posts`)\r\n        const results = await response.json()\r\n        const posts = await results.data.posts\r\n        return posts\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nexport async function fetchMyData(url, userToken) { \r\n    try {\r\n        const response = await fetch(`${url}/users/me`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': \"Bearer \" + userToken\r\n            }\r\n        })\r\n        const results = await response.json()\r\n        return results\r\n    } catch (error) {\r\n        console.error(error)\r\n    }\r\n}\r\n\r\nexport async function sendMessage(url, postId, userToken, message) {\r\n    try {\r\n        const response = await fetch(`${url}/posts/${postId}/messages`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': \"Bearer \" + userToken\r\n            },\r\n            body:  JSON.stringify({\r\n                message: {\r\n                  \"content\": message\r\n                }\r\n            })\r\n        })\r\n        const results = await response.json();\r\n        return results;\r\n    } catch(error) {\r\n        console.error(error)\r\n    }\r\n}\r\n\r\nexport async function editPost( url, postId, userToken, title, description, price, location, deliver) {\r\n    const postObj = { } \r\n    if(title) {\r\n        postObj[\"title\"] = title;\r\n    }\r\n    if(description) {\r\n        postObj[\"description\"] = description;\r\n    }\r\n    if(price) {\r\n        postObj[\"price\"] = price;\r\n    }\r\n    if(location) {\r\n        postObj[\"location\"] = location;\r\n    }\r\n    if(deliver) {\r\n        postObj[\"willDeliver\"] = deliver;\r\n    }\r\n    try {\r\n        const response = await fetch(`${url}/posts/${postId}`, {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': \"Bearer \" + userToken\r\n            },\r\n            body: JSON.stringify({\r\n                post: postObj\r\n            })\r\n        })\r\n        const data = await response.json();\r\n        return data\r\n    } catch (error) {\r\n        console.error(error);\r\n    } \r\n}","import React, {useState} from 'react';\nimport {\n    createPost, \n    BASE_URL\n} from '../api'\n\n\nconst MakePosts = ({userToken, allPosts, setAllPosts}) => {\n\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [price, setPrice] = useState('');\n    const [location, setLocation] = useState('');\n    const [deliver, setDeliver] = useState(false);\n    \n    function resetForm(){\n        setTitle('');\n        setDescription('');\n        setPrice('');\n        setLocation('');\n        setDeliver(false)\n    }\n    \n    async function post(e) {\n        e.preventDefault();\n        try {\n            const results = await createPost(BASE_URL, userToken, title, description, price, location, deliver);\n\n            if(results.success){\n                const result = results.data.post;\n                setAllPosts([...allPosts, result]);\n                resetForm();\n            }\n        } catch(error) {\n            console.error(error)\n        }\n    }\n    \n    return (\n    <section className=\"makePostsAside\">\n        <h1 className=\"makePostTitle\">Make Posts Here</h1>\n            <form className=\"makePostForm\"onSubmit={post}>\n                <div className=\"makePostContent\">\n                    <label className=\"makePostLabel\">Title</label>\n                    <input className=\"makePostInput\" \n                        type=\"text\" \n                        placeholder=\"Title\" \n                        value={title} \n                        required\n                        onChange={(event) => {\n                            setTitle(event.target.value);\n                        }}/>\n                </div>\n                <div className=\"makePostContent\">\n                    <label className=\"makePostLabel\">Description</label>\n                    <input className=\"makePostInput\" \n                        type=\"text\" \n                        placeholder=\"Description\" \n                        value={description}\n                        required\n                        onChange={(event) => {\n                            setDescription(event.target.value);\n                        }}/>\n                </div>\n                <div className=\"makePostContent\">\n                    <label className=\"makePostLabel\">Price</label>\n                    <input className=\"makePostInput\" \n                    type=\"text\" \n                    placeholder=\"Price\" \n                    value={price} \n                    required\n                    onChange={(event) => {\n                        setPrice(event.target.value)\n                    }}/>\n                </div>\n                <div className=\"makePostContent\">\n                    <label className=\"makePostLabel\">Location</label>\n                    <input className=\"makePostInput\" \n                    type=\"text\" \n                    placeholder=\"Location\" value={location}\n                    onChange={(event) => { \n                        setLocation(event.target.value)\n                    }}/>\n                </div>\n                <div className=\"makePostCheck\">\n                    <input className=\"checkbox\"\n                    type=\"checkbox\" \n                    id=\"willDeliver\" \n                    checked={deliver} \n                    onChange={() => {\n                        document.querySelector('#willDeliver:checked') ? setDeliver(true): setDeliver(false)\n                    }}/>\n                    <label className=\"makePostLabel\">Will Deliver</label>\n                </div>\n                <button className=\"makePostSubmit\"\n                type=\"submit\">Make Post!</button>\n            </form>\n    </section>\n    )\n}\n\n\nexport default MakePosts;","import React, { useState }from 'react';\r\nimport { Link} from 'react-router-dom';\r\nimport Aside from \"./Aside\";\r\nimport MakePosts from \"./MakePosts\";\r\n\r\nconst Allposts = ({userToken, myUsername, allPosts, setAllPosts, setSelectedPost, postID}) => {\r\n  \r\n  const [searchTerm, setSearchTerm] = useState('');\r\n    \r\n  function postMatches(post, text) {\r\n    const {title, description, price, author: {username}, location}= post;\r\n    \r\n    if(title.toLowerCase().includes(text.toLowerCase()) || description.toLowerCase().includes(text.toLowerCase()) || price.toLowerCase().includes(text.toLowerCase()) || username.toLowerCase().includes(text.toLowerCase()) || location.toLowerCase().includes(text.toLowerCase()) ) {\r\n        return true;\r\n    }\r\n  }\r\n    \r\n  const filteredPosts = allPosts.filter(post => postMatches(post, searchTerm));\r\n\r\n  const postsToDisplay = searchTerm.length ? filteredPosts : allPosts;\r\n    \r\n  if(userToken) {\r\n    return (\r\n      <>\r\n      <div className=\"allPostsContainer\">\r\n        <div className=\"allPostsHeader\">\r\n          <h1 className=\"searchTitle\"> Search Posts</h1>\r\n          <input className=\"searchBar\" type=\"text\"  placeholder=\"Search\" \r\n            onChange={(event) => { setSearchTerm(event.target.value)}}/>\r\n        </div>\r\n        {allPosts && postsToDisplay.map(post => {\r\n          const {_id, title, description, price, author: {username}, location} = post;\r\n          \r\n          return (\r\n            <div className=\"allposts\" key={_id}>\r\n              <h3 className=\"postTitle\" \r\n                onClick={() => {\r\n                postID(_id)\r\n                setSelectedPost(_id)}}>\r\n                <Link to={`/post/${_id}`} className=\"postsLink\">\r\n                  {title}\r\n                </Link>\r\n              </h3>\r\n              <p className=\"description\">{description}</p>\r\n              <p><b>Price:</b> {price}</p>\r\n              <p><b>Seller:</b> {username}</p>\r\n              <p><b>Location:</b> {location}</p>\r\n              {username === myUsername\r\n              ?\r\n              <div>\r\n                <ul>\r\n                  <li className=\"postLi\" \r\n                    onClick={() => {\r\n                    postID(_id)\r\n                    setSelectedPost(_id)}} > \r\n                    <Link to={`/post/${_id}`} className=\"postsLink\">\r\n                      Take Me To My Post\r\n                    </Link> \r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              :\r\n              <div>\r\n                <ul>\r\n                  <li className=\"postLi\"\r\n                    onClick={() => {\r\n                    postID(_id)\r\n                    setSelectedPost(_id)}}> \r\n                    <Link to={`/post/${_id}`} className=\"postsLink\">\r\n                      Message About Post\r\n                    </Link> \r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              }\r\n            </div>)\r\n          })\r\n        }\r\n        <div className=\"allPostsAside\">  \r\n        <MakePosts \r\n          allPosts={allPosts} \r\n          setAllPosts={setAllPosts} \r\n          userToken={userToken} />\r\n        </div>\r\n      </div>\r\n      </>)\r\n  } else {\r\n    return (\r\n      <>\r\n      <div className=\"allPostsContainer\">\r\n        <div className=\"allPostsAside\">  \r\n          <Aside />\r\n        </div>\r\n         {allPosts.map(post => {\r\n           return (\r\n            <div className=\"allposts\" key={post._id}>\r\n              <h3 className=\"postTitle\">{post.title}</h3>\r\n              <p className=\"description\">{post.description}</p>\r\n              <p><b>Price:</b> {post.price}</p>\r\n              <p><b>Seller:</b> {post.author.username}</p>\r\n              <p><b>Location:</b> {post.location}</p>\r\n            </div>)\r\n          })\r\n        } \r\n      </div>\r\n      </>)\r\n  }\r\n}\r\n\r\n\r\nexport default Allposts;","\r\nimport React from 'react';\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n    BASE_URL,\r\n    fetchLoginUser\r\n} from '../api';\r\n\r\nconst Login = ({setMyPassword, myPassword, setMyUsername, myUsername, setUserToken}) => {\r\n\r\n    let history = useHistory();\r\n    \r\n    async function loginUser(event) {\r\n        event.preventDefault();\r\n        try {\r\n            const results = await fetchLoginUser(BASE_URL, myUsername, myPassword);\r\n            if(results.success) {\r\n                const token = await results.data.token;\r\n                setUserToken(token);\r\n                setMyUsername(myUsername);\r\n                localStorage.setItem('userToken', JSON.stringify(token));\r\n                localStorage.setItem('myUsername', JSON.stringify(myUsername));\r\n                history.push(\"/profile\");\r\n            } else {\r\n                alert(results.error.message);\r\n            }\r\n        } catch(error) {\r\n            console.error(error);\r\n        } \r\n    }\r\n\r\n    return (\r\n        <section className=\"loginContainer\">\r\n            <h1 className=\"loginTitle\">Login</h1>\r\n                <form className=\"loginForm\" onSubmit={loginUser}>\r\n                    <div>\r\n                        <input type=\"text\" placeholder=\"Username\" className=\"loginInput\" onChange={(event) => {setMyUsername(event.target.value)}} required/>\r\n                    </div>\r\n                    <br></br>\r\n                    <div>\r\n                        <input type=\"text\" placeholder=\"Password\" className=\"loginInput\" onChange={(event) => {setMyPassword(event.target.value)}} required/>\r\n                    </div>\r\n                    <button className=\"loginBtn\"type=\"submit\">LOGIN</button>\r\n                </form>\r\n        </section>\r\n    ) \r\n}\r\n\r\nexport default Login; ","import React, {useEffect} from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MakePosts from './MakePosts';\n\nconst Myposts = ({userToken, postDeleted, allPosts, setAllPosts, setSelectedPost, postID, myUsername}) => {\n\n    useEffect(async () => {\n        try {\n            setAllPosts([...allPosts]);\n        } catch(error) {\n            console.error(error);\n        }\n    }, [postDeleted]);\n   \n    return (\n        <div>\n            <h1 className=\"profileBodyHeader\"> My Posts</h1>\n            <div className=\"myPostsContainer\">\n                {allPosts.map(post => {\n                    const {_id, title, description, price, author: {username}, location, active} = post\n                    if(active && myUsername === username) {\n                        return (\n                            <div className=\"allposts myPosts\" key={_id}>\n                                <h3 onClick={() => {\n                                        postID(_id)\n                                        setSelectedPost(_id)\n                                }}>\n                                    <Link to={`/post/${_id}`} className=\"postsLink myPosts\">\n                                        {title} \n                                    </Link>\n                                </h3>\n                                <p className=\"description\">{description}</p>\n                                <p><b>Price:</b> {price}</p>\n                                <p><b>Location:</b> {location}</p>\n                                <div>\n                                    <ul>\n                                        <li className=\"postLi myPosts\"\n                                            onClick={() => {\n                                                postID(_id)\n                                                setSelectedPost(_id)\n                                        }}> \n                                            <Link to={`/post/${_id}`} className=\"postsLink myPosts\">\n                                                Take Me To My Post\n                                            </Link> \n                                        </li>\n                                    </ul>\n                                </div>\n                            </div> \n                        )\n                    } else {\n                        return\n                    }\n                })}\n                <div className=\"allPostsAside\">\n                    <MakePosts \n                        allPosts={allPosts}\n                        setAllPosts={setAllPosts}\n                        userToken={userToken}/>\n                </div>\n            </div>\n        </div>\n    )\n        \n}\n\n\nexport default Myposts; ","import React, {useEffect, useState} from 'react';\n\nimport {BrowserRouter as Router, Link, } from 'react-router-dom';\n\nimport {\n    fetchMyData, \n    BASE_URL\n} from '../api';\n\nconst SentMessages = ({userToken, myUsername, setSelectedPost, postID}) => {\n\n    const [mySentMessageList, setMySentMessageList] = useState([]);\n\n    useEffect(async () => {\n        try {\n            const results = await fetchMyData(BASE_URL, userToken);\n            const sentMessageData = results.data.messages;\n            setMySentMessageList(sentMessageData);\n        } catch(error) {\n            console.error(error);\n        }\n    }, []);\n\n   return (\n        <div>\n            <h1 className=\"profileBodyHeader\"> Sent Messages</h1>\n            <div >\n                {mySentMessageList.map(message => { \n                    if(message.fromUser.username === myUsername) {\n                        return (\n                            <div className=\"messages\" key={message._id}>\n                                <div>\n                                    <ul>\n                                        <li className=\"postLi\"\n                                            onClick={() => {\n                                                setSelectedPost(message.post._id)\n                                                postID(message.post._id)\n                                        }}>\n                                            <Link to={`/post/${message.post._id}`} className=\"postsLink\">\n                                                Message Again: {message.post.title}\n                                            </Link>\n                                        </li>\n                                    </ul>\n                                </div>\n                                <p>{message.content}</p>\n                            </div>\n                        ) \n                    } else {\n                        return\n                    } \n                })}\n            </div>\n        </div>\n    )       \n}\n\nexport default SentMessages; ","import React, {useEffect, useState} from 'react';\nimport { Link } from 'react-router-dom';\n\nimport {\n    fetchMyData, \n    BASE_URL\n} from '../api';\n\nconst ReceivedMessages = ({userToken, myUsername, setSelectedPost, postID}) => {\n\n    const [myReceivedMessageList, setMyReceivedMessageList] = useState([]);\n\n    useEffect(async () => {\n        try {\n            const results = await fetchMyData(BASE_URL, userToken);\n            const receivedMessageData = results.data.messages;\n            setMyReceivedMessageList(receivedMessageData);\n        } catch(error) {\n            console.error(error)\n        }\n    }, []);\n\n   return (\n        <div>\n            <h1 className=\"profileBodyHeader\"> Received Messages</h1>\n            <div >\n                {myReceivedMessageList.map(message => { \n                    if(message.fromUser.username !== myUsername) {\n                        return ( \n                            <div className=\"messages\" key={message._id}>\n                                <h3>MESSAGE FROM: {message.fromUser.username}</h3>\n                                <p>{message.content}</p>\n                                <div>\n                                    <ul>\n                                        <li className=\"postLi\" \n                                            onClick={() => {\n                                                setSelectedPost(message.post._id)\n                                                postID(message.post._id)\n                                        }}>\n                                            <Link to={`/post/${message.post._id}`} className=\"postsLink\">\n                                                View My Post: {message.post.title}\n                                            </Link> \n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        )\n                    }\n                })}\n            </div>\n        </div>\n    )       \n}\n\n\nexport default ReceivedMessages; ","import React, {useState} from 'react';\nimport {\n    editPost, \n    BASE_URL\n} from '../api'\n\n\nconst EditPost = ({userToken, allPosts, setAllPosts, selectedPost, ToggleClass}) => {\n\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [price, setPrice] = useState('');\n    const [location, setLocation] = useState('');\n    const [deliver, setDeliver] = useState(false);\n    \n    function resetForm() {\n        setTitle('');\n        setDescription('');\n        setPrice('');\n        setLocation('');\n        setDeliver(false);\n    }\n\n    async function edit(e) {\n        e.preventDefault();\n            try {\n                const results = await editPost(BASE_URL, selectedPost, userToken, title, description, price, location, deliver);\n                console.log(results)\n                if(results.success) {\n                    setAllPosts([...allPosts]);\n                    ToggleClass();\n                    resetForm();\n                }\n            } catch(error) {\n                console.error(error)\n        }\n    }\n    \n    return (\n        <section className=\"editPostsAside\">\n            <h1 className=\"editPostTitle\">Edit Posts Here</h1>\n                <form className=\"edutPostForm\" onSubmit={edit}>\n                    <div className=\"editPostContent\">\n                        <label className=\"editPostLabel\">Title</label>\n                    </div>\n                    <div className=\"editPostContent\">\n                        <input className=\"editPostInput\" type=\"text\" \n                            placeholder=\"Title\" value={title} \n                            onChange={(event) => {\n                                setTitle(event.target.value);\n                        }}/>\n                    </div>\n                    <div className=\"editPostContent\">\n                        <label className=\"editPostLabel\">Description</label>\n                    </div>\n                    <div className=\"editPostContent\">\n                        <input className=\"editPostInput\" type=\"text\" \n                            placeholder=\"Description\" value={description}\n                            onChange={(event) => {\n                                setDescription(event.target.value);\n                        }}/>\n                    </div>\n                    <div className=\"editPostContent\">\n                        <label className=\"editPostLabel\" >Price</label>\n                    </div> \n                    <div className=\"editPostContent\">\n                        <input className=\"editPostInput\" type=\"text\" \n                            placeholder=\"Price\" value={price} \n                            onChange={(event) => {\n                                setPrice(event.target.value)\n                        }}/>\n                    </div>\n                    <div className=\"editPostContent\">\n                        <label className=\"editPostLabel\">Location</label>\n                    </div>\n                    <div className=\"editPostContent\">\n                        <input className=\"editPostInput\" type=\"text\" \n                            placeholder=\"Location\" value={location}\n                            onChange={(event) => { \n                                setLocation(event.target.value)\n                        }}/>\n                    </div>\n                    <div className=\"editPostCheck\">\n                        <input className=\"checkbox\" type=\"checkbox\" \n                            id=\"willDeliver\" checked={deliver} \n                            onChange={() => {\n                                document.querySelector('#willDeliver:checked') ? setDeliver(true): setDeliver(false)\n                        }}/>\n                        <label className=\"editPostLabel\">Will Deliver</label>\n                    </div>\n                    <button className=\"editPostSubmit\" type=\"submit\">Update Post!</button>\n                </form>\n        </section>\n    )\n}\n\n\nexport default EditPost;","import React, {useState, useEffect} from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  fetchMyData, \n  BASE_URL, \n  sendMessage\n} from '../api';\n\nimport EditPost from './EditPost';\n\nconst IndividualPost = ({userToken, deleteItem, allPosts, setAllPosts, myUsername, selectedPost,}) => {\n\n  const [message, setMessage] = useState('');\n  const [myPostMessages, setMyPostMessages] = useState([]);\n  const [isActiveEdit, setActiveEdit] = useState(\"false\");\n  const [isActiveMessage, setActiveMessage] = useState(\"true\");\n\n  let history = useHistory();\n\n  useEffect(async () => {\n    try {\n      const results = await fetchMyData(BASE_URL, userToken);\n      const receivedMessageData = results.data.messages;\n      setMyPostMessages(receivedMessageData);\n    } catch(error) {\n        console.error(error)\n    }\n  }, []);\n\n  const ToggleClass = () => {\n    setActiveEdit(!isActiveEdit);\n    setActiveMessage(!isActiveMessage);\n  };\n\n  async function send(postId) {\n    try {\n      const response = await sendMessage(BASE_URL, postId, userToken, message);\n      if(response.success) {\n        emptyMessageForm();\n      }\n    } catch(error) {\n        console.error(error);\n    }\n  }\n\n  function emptyMessageForm() {\n      setMessage('');\n    }\n   \n  if(userToken) {\n    return (\n      <>\n      <div className=\"ipForm\">\n        {allPosts.map(post => {\n          const {_id, title, description, price, author: {username}, location, active} = post;\n          if(active && _id === selectedPost) {\n            return (\n              <div className=\"allposts\" key={_id}>\n                <div className=\"IPText\">\n                  <h3>{title}</h3>\n                  <p className=\"description\">{description}</p>\n                  <p><b>Price:</b> {price}</p>\n                  <p><b>Seller:</b> {username}</p>\n                  <p><b>Location:</b> {location}</p>\n                </div>\n                {username === myUsername \n                ?\n                <>\n                <div>\n                  <button className=\"edit button\" onClick={ToggleClass}>\n                    Edit\n                  </button>\n                  <button className=\"delete button\"\n                    onClick={() => {\n                      deleteItem(_id)\n                      history.push(\"/profile\")\n                  }}>\n                    Delete\n                  </button>\n                </div>\n                <div className=\"ipInteractiveBox\">\n                  <div className={`editFeild-${isActiveEdit ? \"inactive\" : \"active\"}`}>\n                    <EditPost \n                      userToken={userToken} \n                      allPosts={allPosts} \n                      setAllPosts={setAllPosts} \n                      selectedPost={selectedPost}\n                      ToggleClass={ToggleClass}/>\n                  </div>\n                  <div className={`messageFeild-${isActiveMessage ?  \"active\" : \"inactive\"}`}>\n                    <h2 className=\"messageFeildHeader\">MESSAGES FOR THIS POST</h2>\n                    {myPostMessages && myPostMessages.map(message => { \n                      if(message.fromUser.username !== myUsername && message.post._id === selectedPost ) {\n                        return ( \n                          <div className=\"messages\" key={message._id}>\n                            <h3>MESSAGE FROM: {message.fromUser.username}</h3>\n                            <p>{message.content}</p>\n                          </div> \n                        )\n                      }\n                    })}\n                  </div>\n                </div>\n                </>\n                :\n                <div className=\"sendMessageFeild\">\n                  <input className=\"sendMessageInput\" type=\"text\" \n                    placeholder=\"Your Message Here\" value={message} required \n                    onChange={(event) => {\n                      setMessage(event.target.value)\n                  }} />\n                  <button className=\"sendMessageBtn\" onClick={() => {send(_id)}}>Send Your Message</button>\n                </div>\n                }\n              </div>)\n          }\n        })}\n      </div>\n      </>\n    )}         \n}   \n\n\nexport default IndividualPost; ","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router, \r\n    Route, \r\n    Link, \r\n    Switch, \r\n    useRouteMatch\r\n} from 'react-router-dom';\r\n\r\nimport Myposts from './Myposts';\r\nimport SentMessages from './SentMessages';\r\nimport ReceivedMessages from './ReceivedMessages';\r\nimport IndividualPost from './IndividualPost';\r\n\r\nconst Profile = ({myUsername, userToken, postDeleted, deleteItem, allPosts, setAllPosts, selectedPost, setSelectedPost, postID}) => {\r\n\r\n    let match = useRouteMatch();\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <div className=\"profileMenu\">\r\n                    <h1 className=\"welcomMessage\">Welcome {myUsername}</h1>\r\n                    <nav className=\"profile\">\r\n                        <ul>\r\n                            <li className=\"profileBtn\" >\r\n                                <Link to={`${match.url}/my-posts`} className=\"profileLink\" >\r\n                                    My Posts \r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"profileBtn\" >\r\n                                <Link to={`${match.url}/sent-messages`} className=\"profileLink\" >\r\n                                    Sent Messages \r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"profileBtn\" >\r\n                                <Link to={`${match.url}/received-messages`} className=\"profileLink\" >\r\n                                    Received Messages \r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            \r\n                <Switch>\r\n                    <Route path={`${match.path}/my-posts`}>\r\n                        <Myposts \r\n                            userToken={userToken}\r\n                            postDeleted={postDeleted}\r\n                            allPosts={allPosts}\r\n                            setAllPosts={setAllPosts}\r\n                            setSelectedPost={setSelectedPost}\r\n                            postID={postID}\r\n                            myUsername={myUsername}\r\n                        />\r\n                    </Route>\r\n                    <Route path={`${match.path}/sent-messages`}>\r\n                            <SentMessages \r\n                                userToken={userToken} \r\n                                myUsername={myUsername}\r\n                                setSelectedPost={setSelectedPost}\r\n                                postID={postID}\r\n                            />\r\n                    </Route>\r\n                    <Route path={`${match.path}/received-messages`}>\r\n                            <ReceivedMessages \r\n                                userToken={userToken} \r\n                                myUsername={myUsername} \r\n                                setSelectedPost={setSelectedPost}\r\n                                postID={postID}\r\n                            />\r\n                    </Route>\r\n                    <Route path=\"/post/:id\">\r\n                        <IndividualPost \r\n                            myUsername={myUsername}\r\n                            allPosts={allPosts}\r\n                            setAllPosts={setAllPosts}\r\n                            userToken={userToken}\r\n                            deleteItem={deleteItem}\r\n                            selectedPost={selectedPost}\r\n                        /> \r\n                    </Route>\r\n                    <Route exact path=\"/profile\">\r\n                        <ReceivedMessages \r\n                            userToken={userToken} \r\n                            myUsername={myUsername} \r\n                            setSelectedPost={setSelectedPost}\r\n                            selectedPost={selectedPost} \r\n                            postID={postID} \r\n                        />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\n\r\nexport default Profile; ","import React, {useState} from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n    BASE_URL,\r\n    fetchResgisterUser\r\n} from '../api';\r\n\r\nconst Register = ({setUserToken, setMyPassword, myPassword, setMyUsername, myUsername}) => {\r\n    \r\n    const [confirMmyPassword, setConfirmMyPassword] = useState('');\r\n\r\n    let history = useHistory();\r\n\r\n    async function registerUser(event) {\r\n        event.preventDefault();\r\n        if (myPassword !== confirMmyPassword) {\r\n            alert(\"please make sure your passwords match\");\r\n        } else {\r\n            try {\r\n                const results = await fetchResgisterUser(BASE_URL, myUsername, myPassword);\r\n                if(results.success) {\r\n                    const token = await results.data.token;\r\n                    setUserToken(token);\r\n                    setMyUsername(myUsername);\r\n                    localStorage.setItem('userToken', JSON.stringify(token));\r\n                    localStorage.setItem('myUsername', JSON.stringify(myUsername));\r\n                    history.push(\"/profile\");\r\n                } else {\r\n                    alert(results.error.message);\r\n                }\r\n            }catch(error) {\r\n                console.error(error);\r\n            }   \r\n        }  \r\n    }\r\n    \r\n    return (\r\n        <section className=\"registerContainer\">\r\n            <h1 className=\"registerTitle\">Register</h1>\r\n            <form className=\"registerForm\"onSubmit={registerUser}>\r\n                <div>\r\n                    <input type=\"text\" placeholder=\"Username\" className=\"registerInput\"\r\n                        onChange={(event) => {setMyUsername(event.target.value)}} required\r\n                    />\r\n                 </div>\r\n                <div>\r\n                    <input type=\"text\" placeholder=\"Password\" className=\"registerInput\"\r\n                        onChange={(event) => {setMyPassword(event.target.value)}} required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <input type=\"text\" placeholder=\"Confirm Password\" className=\"registerInput\"\r\n                        onChange={(event) => {setConfirmMyPassword(event.target.value)}} required\r\n                    />\r\n                </div>\r\n                <button className=\"registerbtn\" type=\"submit\">\r\n                    REGISTER\r\n                </button>\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\nexport default Register; ","import React from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport {removeCurrentUserToken, removeCurrentUsername}\r\nfrom '../auth'\r\n\r\n\r\nconst Title = ({userToken, setUserToken, setMyUsername, setSelectedPost}) => {\r\nlet history = useHistory()\r\n    return (<div id=\"title\">\r\n       <Link to=\"/posts\" style={{ textDecoration: 'none', fontSize: '26px' }}>\r\n           <h1 className=\"title\">\r\n               Stranger's Things\r\n            </h1> \r\n        </Link> \r\n        {userToken? <nav>\r\n            <div className=\"profileBox\">\r\n                <ul>\r\n                    <Link to=\"/profile\">\r\n                    <li className=\"navBtn\">PROFILE</li>\r\n                    </Link>\r\n                    <Link to=\"/posts\">\r\n                    <li className=\"navBtn\">POSTS</li>\r\n                    </Link>\r\n                    <button className=\"navBtn\"\r\n                        onClick={() => {\r\n                        setUserToken(removeCurrentUserToken());\r\n                        setMyUsername(removeCurrentUsername());\r\n                        setSelectedPost(localStorage.removeItem('postId'));\r\n                    history.push(\"/\");\r\n                    }}>LOGOUT\r\n                    </button>\r\n                </ul>\r\n            </div>\r\n            </nav>:\r\n            <nav>\r\n                <ul>\r\n                    <Link to=\"/login\">\r\n                    <li className=\"navBtn\">LOGIN</li>\r\n                    </Link>\r\n                    <Link to=\"/register\">\r\n                    <li className=\"navBtn\">REGISTER</li>\r\n                    </Link>\r\n                </ul>\r\n            </nav>}\r\n    </div>)\r\n}\r\n\r\nexport default Title; ","export function getCurrentUserToken() {\n  const user = JSON.parse(localStorage.getItem('userToken'));\n  return user;\n}\n\nexport function removeCurrentUserToken() {\n  localStorage.removeItem('userToken')\n}\n\nexport function getCurrentUsername() {\n  const storageUsername = JSON.parse(localStorage.getItem('myUsername'));\n  return storageUsername;\n}\n\nexport function removeCurrentUsername() {\n  localStorage.removeItem('myUsername')\n}","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n    BrowserRouter as Router, \n    Route, \n    Switch\n} from 'react-router-dom';\n\nimport {\n    Login,\n    Profile,\n    Register,\n    Title,\n    Allposts,\n    IndividualPost\n} from './components';\n\nimport {\n    getCurrentUserToken,\n    getCurrentUsername\n} from './auth';\n\nimport {\n    deletePost,\n    BASE_URL,\n    fetchAllPosts\n} from './api';\n\nconst App = () => {\n\n    const [allPosts, setAllPosts]= useState([]);\n    const [userToken, setUserToken] = useState(getCurrentUserToken());\n    const [myUsername, setMyUsername] = useState(getCurrentUsername());\n    const [myPassword, setMyPassword] = useState('');\n    const [postDeleted, setPostDeleted] = useState(0);\n    const [myPostsList, setMyPostsList] = useState([]);\n    const [selectedPost, setSelectedPost] = useState(getPostId());\n    \n    useEffect(() => {\n        fetchAllPosts()\n          .then((allPosts) => {\n            setAllPosts(allPosts);\n          })\n          .catch(error => console.error(error))\n    }, [postDeleted]);\n      \n    async function deleteItem(id) {\n        const result = await deletePost(BASE_URL, id, userToken);\n        if(result.success) {\n            setPostDeleted(postDeleted +1);\n        }\n    }\n\n    function postID(post_ID) {\n        localStorage.removeItem('postId');\n        localStorage.setItem('postId', JSON.stringify(post_ID));\n      }\n\n    function getPostId() {\n        const selectedpostID = JSON.parse(localStorage.getItem('postId'));\n        return selectedpostID;\n    }\n\n    return (\n        <Router>\n            <div className=\"app\">\n                <Title \n                    userToken={userToken}\n                    setUserToken={setUserToken} \n                    setMyUsername={setMyUsername}\n                    setSelectedPost={setSelectedPost}\n                />\n                {userToken \n                ?\n                (<div>\n                    <Switch>\n                        <Route exact path=\"/profile\">\n                            <Profile \n                                myUsername={myUsername}\n                                userToken={userToken}\n                                postDeleted={postDeleted}\n                                deleteItem={deleteItem}\n                                allPosts={allPosts}\n                                setAllPosts={setAllPosts}\n                                selectedPost={selectedPost}\n                                setSelectedPost={setSelectedPost}\n                                postID={postID}\n                            />\n                        </Route>\n                        <Route path=\"/posts\">\n                            <Allposts  \n                                userToken={userToken}\n                                myUsername={myUsername}\n                                allPosts={allPosts}\n                                setAllPosts={setAllPosts}\n                                setSelectedPost={setSelectedPost}\n                                postID={postID}\n                            />\n                        </Route>\n                        <Route path=\"/post/:id\">\n                            <IndividualPost \n                                myUsername={myUsername}\n                                allPosts={allPosts}\n                                setAllPosts={setAllPosts}\n                                userToken={userToken}\n                                selectedPost={selectedPost}\n                                deleteItem={deleteItem}\n                            /> \n                        </Route>\n                        <Route exact path=\"/\">\n                            <Profile \n                                myUsername={myUsername}\n                                userToken={userToken}\n                                postDeleted={postDeleted}\n                                deleteItem={deleteItem}\n                                allPosts={allPosts}\n                                setAllPosts={setAllPosts}\n                                selectedPost={selectedPost}\n                                setSelectedPost={setSelectedPost}\n                                postID={postID}\n                            />\n                        </Route>\n                    </Switch>\n                </div>)\n                :\n                (<div>\n                    <Switch>\n                        <Route path=\"/register\">\n                            <Register \n                                setUserToken={setUserToken}\n                                myUsername={myUsername}\n                                setMyUsername={setMyUsername}\n                                myPassword={myPassword}\n                                setMyPassword={setMyPassword}\n                                />\n                            </Route>\n                        <Route path=\"/login\">\n                            <Login \n                                myUsername={myUsername}\n                                setMyUsername={setMyUsername}\n                                myPassword={myPassword}\n                                setMyPassword={setMyPassword}\n                                setUserToken={setUserToken}\n                            />\n                        </Route>\n                        <Route exact path=\"/\">\n                            <Allposts \n                                allPosts={allPosts}\n                                setAllPosts={setAllPosts}/>\n                        </Route>\n                    </Switch>\n                </div>)\n                }\n            </div>\n        </Router>\n    )\n}\n\n\n\nReactDOM.render( <App />, document.getElementById('root'));"],"sourceRoot":""}